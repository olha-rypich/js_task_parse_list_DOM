{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAY,SAAS,aAAa,CAAC,MACnC,EAAa,EAAG,SAAS,gBAAgB,CAAC,QAqBhD,AAnBA,SAAkB,CAAI,EACpB,SAAS,EAAa,CAAG,EACvB,MAAO,CAAC,EAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GACvC,CAEA,EAAK,IAAI,CAAC,SAAC,CAAA,CAAK,CAAhB,EACE,OAAO,EAAa,EAAI,OAAO,CAAC,MAAM,EAAI,EAAa,EAAI,OAAO,CAAC,MAAM,CAC3E,GAEA,AAAA,EAAU,MAAM,CAAhB,KAAA,CAAA,EAAiB,EAAG,GACtB,EASS,GANA,AAOI,EAPC,GAAG,CAAC,SAAC,CAAjB,EAAyB,OAAA,A,S,C,E,I,I,E,E,E,U,M,C,I,C,I,E,A,M,S,C,E,C,S,C,E,C,C,E,E,O,I,C,E,C,Y,O,O,qB,E,C,E,E,M,C,O,qB,C,G,M,C,S,C,E,O,O,wB,C,E,G,U,A,G,E,E,O,C,S,C,M,E,E,C,C,E,C,A,K,E,O,c,C,E,E,C,M,E,W,C,E,a,C,E,S,C,C,G,A,C,C,E,C,C,E,C,O,C,EAAA,CACvB,KAAM,EAAG,SAAS,AACf,EAAA,EAAG,OAAO,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _object_spread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar inputList = document.querySelector(\"ul\");\nvar listItems = _to_consumable_array(document.querySelectorAll(\"li\"));\nfunction sortList(list) {\n    var _inputList;\n    function convertToNum(str) {\n        return +str.slice(1).split(\",\").join(\"\");\n    }\n    list.sort(function(el1, el2) {\n        return convertToNum(el2.dataset.salary) - convertToNum(el1.dataset.salary);\n    });\n    (_inputList = inputList).append.apply(_inputList, _to_consumable_array(list));\n}\nfunction getEmployees(list) {\n    return list.map(function(el) {\n        return _object_spread({\n            name: el.innerText\n        }, el.dataset);\n    });\n}\nsortList(listItems);\ngetEmployees(listItems);\n\n//# sourceMappingURL=index.3c83e28e.js.map\n","'use strict';\n\nconst inputList = document.querySelector('ul');\nconst listItems = [...document.querySelectorAll('li')];\n\nfunction sortList(list) {\n  function convertToNum(str) {\n    return +str.slice(1).split(',').join('');\n  }\n\n  list.sort((el1, el2) => {\n    return convertToNum(el2.dataset.salary) - convertToNum(el1.dataset.salary);\n  });\n\n  inputList.append(...list);\n}\n\nfunction getEmployees(list) {\n  return list.map((el) => ({\n    name: el.innerText,\n    ...el.dataset,\n  }));\n}\n\nsortList(listItems);\ngetEmployees(listItems);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","inputList","document","querySelector","listItems","querySelectorAll","sortList","list","convertToNum","str","split","join","sort","el1","el2","dataset","salary","append","apply","map","el","_object_spread","target","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","value","defineProperty","configurable","writable","obj","innerText"],"version":3,"file":"index.3c83e28e.js.map"}